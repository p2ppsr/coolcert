// Cool Certificate Type Definition
//
// A Certifier defines one or more certificate types that they issue and manage.
// The certificate type encompasses a list of fields and their expected and valid values.
// A certificate type is assigned a unique identifier which must be a random 32 byte value
// encoded as a base64 string.
// A new certificate type identifier can be generated by the following code:
//      Utils.toBase64(Random(32))
//
// Do not re-use type identifiers. The value is not private, so we keep it here with the
// certificate structure definition.
//
// The purpose of this certificate is to server as a self-certified external identity to

import { Base64String, CertificateFieldNameUnder50Bytes } from "@bsv/sdk"

// be associated with the certificate owner.
export const certificateType: Base64String = 'h53Tvo8w3nqeF2cPyuRUc/B+gjPXJ3gPS2PKFBZfpDw='
export const certificateDefinition: Record<CertificateFieldNameUnder50Bytes, string> = {
  cool: 'true'
}
export const certificateFields: CertificateFieldNameUnder50Bytes[] = Object.keys(certificateDefinition)
